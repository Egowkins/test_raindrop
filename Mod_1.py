# -*- coding: utf-8 -*-
"""mod1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/aleshkovskijjaaa/52894a55cb1a48e903da80a1c900fdc8/mod1.ipynb
"""

import pandas as pd
import numpy as np
from google.colab import drive
drive.mount('/content/drive')
from scipy.signal import find_peaks
import matplotlib.pyplot as plt

df_pump = pd.read_csv('/content/drive/MyDrive/20231206-0001.csv', sep=';', decimal=',')

def optimization(train):

    for column in train.columns:
        train[column] = train[column].astype(str)
        train[column] = train[column].str.replace(',', '.')
        train[column] = pd.to_numeric(train[column], errors='coerce')
        print("!")

    return train

df_pump = optimization(df_pump)

def heigh_searh(dataframe):
  """
  Функция предназначена для нахождения уровня амплитуды сигнала А (ниже которой не берем – слишком маленькие капли)
  """
  positive_values = df_pump['Channel A'][df_pump['Channel A'] > 0]
  height = np.nanquantile(positive_values, 0.15)
  return height

def raindrop_collector(for_train, window_size: int, uroven, window_mean = None):

    if type(window_size) != int:
        raise TypeError('Тип данных должен быть int')

    #hardcode для эмпирически выверенного окна
    if window_size < 50000:
        window_size = 50000


    # находим пики с высотой больше ...
    peaks, i = find_peaks(for_train['Channel A'], uroven, distance=window_size)

    #храниние капель
    setup = np.empty((len(for_train),), dtype=object)
    print("!")

    for i, peak in enumerate(peaks):
        start = max(peak - window_size // 2, 0)
        end = min(peak + window_size // 2, len(for_train))

        # Вырезаем окно для каждого канала
        window = for_train.loc[start:end, ['Time', 'Channel A', 'Channel B', 'Channel C', 'Channel D']].copy()

        # Добавляем окно в массив капелек
        setup[i] = window

    return setup

WIN_SIZE = 10000
a = raindrop_collector(df_pump, WIN_SIZE, height)

print(a)

height = heigh_searh(df_pump)
